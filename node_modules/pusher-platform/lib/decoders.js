"use strict";
var BufferedDecoder = (function () {
    function BufferedDecoder(response, resolve, reject) {
        var _this = this;
        this.response = response;
        this.resolve = resolve;
        this.reject = reject;
        this.buffer = new Buffer(0);
        this.response.on("data", function (data) {
            if (typeof data === "string") {
                _this.buffer.write(data);
            }
            else {
                _this.buffer = Buffer.concat([_this.buffer, data]);
            }
        });
        this.response.on("error", function (error) {
            _this.reject(error);
        });
        this.response.on("end", function () {
            _this.resolve(_this.buffer);
        });
    }
    return BufferedDecoder;
}());
function readBuffer(response) {
    return new Promise(function (resolve, reject) {
        new BufferedDecoder(response, resolve, reject);
    });
}
exports.readBuffer = readBuffer;
function readString(response) {
    return readBuffer(response).then(function (result) {
        return result.toString();
    });
}
exports.readString = readString;
function readJSON(response) {
    return readString(response).then(function (result) {
        return JSON.parse(result);
    });
}
exports.readJSON = readJSON;
//# sourceMappingURL=decoders.js.map